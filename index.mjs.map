{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar incrmean = require( '@stdlib/stats-incr-mean' );\nvar signum = require( '@stdlib/math-base-special-signum' );\nvar kroneckerDelta = require( '@stdlib/math-base-special-kronecker-delta' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes the mean directional accuracy.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrmda();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 4.0 );\n* // returns 0.5\n*\n* m = accumulator();\n* // returns 0.5\n*/\nfunction incrmda() {\n\tvar mean;\n\tvar FLG;\n\tvar f0;\n\tvar a0;\n\n\tmean = incrmean();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated mean directional accuracy. If not provided a value, the accumulator function returns the current mean directional accuracy.\n\t*\n\t* @private\n\t* @param {number} [f] - forecast value\n\t* @param {number} [a] - actual value\n\t* @returns {(number|null)} mean directional accuracy or null\n\t*/\n\tfunction accumulator( f, a ) {\n\t\tvar sf;\n\t\tvar sa;\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn mean();\n\t\t}\n\t\tif ( FLG === void 0 ) {\n\t\t\tFLG = true;\n\t\t\tf0 = f;\n\t\t\ta0 = a;\n\t\t}\n\t\tsf = signum( f-f0 );\n\t\tsa = signum( a-a0 );\n\t\tf0 = f;\n\t\ta0 = a;\n\t\treturn mean( kroneckerDelta( sf, sa ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrmda;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the mean directional accuracy (MDA) incrementally.\n*\n* @module @stdlib/stats-incr-mda\n*\n* @example\n* var incrmda = require( '@stdlib/stats-incr-mda' );\n*\n* var accumulator = incrmda();\n*\n* var m = accumulator();\n* // returns null\n*\n* m = accumulator( 2.0, 3.0 );\n* // returns 1.0\n*\n* m = accumulator( -5.0, 4.0 );\n* // returns 0.5\n*\n* m = accumulator();\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar incrmda = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = incrmda;\n"],"names":["incrmean","require$$0","signum","require$$1","kroneckerDelta","require$$2","lib","mean","FLG","f0","a0","f","a","sf","sa","arguments","length"],"mappings":";;oRAsBA,IAAIA,EAAWC,EACXC,EAASC,EACTC,EAAiBC,EAgErB,ICtCAC,EDDA,WACC,IAAIC,EACAC,EACAC,EACAC,EAGJ,OADAH,EAAOP,IAWP,SAAsBW,EAAGC,GACxB,IAAIC,EACAC,EACJ,GAA0B,IAArBC,UAAUC,OACd,OAAOT,SAEK,IAARC,IACJA,GAAM,EACNC,EAAKE,EACLD,EAAKE,GAMN,OAJAC,EAAKX,EAAQS,EAAEF,GACfK,EAAKZ,EAAQU,EAAEF,GACfD,EAAKE,EACLD,EAAKE,EACEL,EAAMH,EAAgBS,EAAIC"}